// Here you can add other styles
.fc-button{
    text-transform: uppercase !important;
}
.fc-event{
    padding: 2px;
}
.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{
    width:unset !important;
}

input.mat-chip-input{
    flex: 1 0 30px !important;
}

/*Loader Start*/
$count: 10;
$time: 2; //in seconds
$size: 100;
$color: #ffffff;

.holder {
  position: absolute;
  left: 0px;
  top: 0px;
  bottom: 0px;
  right: 0px;
  width: 100%;
  height: 100%;
  background-color: #2D2F48;
  z-index: 100000;
  opacity: 0.6;
}

.preloader {
  /* size */
  width: $size + px;
  height: $size + px;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
  animation: rotatePreloader $time + s infinite ease-in;
}
@keyframes rotatePreloader {
  0% {
  transform: translateX(-50%) translateY(-50%) rotateZ(0deg);
  }
  100% {
  transform: translateX(-50%) translateY(-50%) rotateZ(-360deg);
  }
}
.preloader div {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
}
.preloader div:before {
  content: "";
  position: absolute;
  left: 50%;
  top: 0%;
  width: 10%;
  height: 10%;
  background-color: $color;
  transform: translateX(-50%);
  border-radius: 50%;
}

@for $i from 1 through $count {
  .preloader div:nth-child(#{$i}) {
    transform: rotateZ(((360 / $count) * ($i - 1)) + deg);
    animation: rotateCircle + $i $time + s infinite linear;
    z-index: $count - $i;
  }
  @keyframes rotateCircle#{$i} {
    #{percentage(((50 / $count) * ($i - 1)) / 100)} {
      opacity: 0;
    }
    #{percentage((((50 / $count) + 0.0001) * ($i - 1)) / 100)} {
      opacity: 1;
      transform: rotateZ((0 - ((360 / $count) * ($i - 2))) + deg);
    }
    #{percentage((((50 / $count) * ($i - 0)) + 2) / 100)} {
      transform: rotateZ((0 - ((360 / $count) * ($i - 1))) + deg);
    }
    #{percentage(((50 + ((50 / $count) * ($i - 0))) + 2) / 100)} {
      transform: rotateZ((0 - ((360 / $count) * ($i - 1))) + deg);
    }
    100% {
      transform: rotateZ((0 - ((360 / $count) * ($count - 1))) + deg);
      opacity: 1;
    }
  }
}
/*Loader End*/


.expansion-header-custom .mat-expansion-panel-header, .expansion-header-custom .mat-expansion-panel-header:hover{
  background: #d2d9d9 !important;
  padding: 0 15px;
  height: 48px !important;
}

.expansion-header-custom .mat-expansion-panel-header-title{
  margin-top: 5px;
}
.p-4 {
  padding: 1.5rem!important;
}
.m-r-15{
  margin-right: 15px;
}
.m-t-20 {
  margin-top: 20px;
}
.m-t-10 {
  margin-top: 10px;
}
.m-b-10 {
  margin-bottom: 10px;
}
.m-b-1{
  margin-bottom: 1px;
}
.m-l-10 {
  margin-left: 10px !important;
}
.task-add-btn {
  font-size: 18px;
  background: #fff;
  width: 35px !important;
  height: 35px !important;
}
.cdk-overlay-container {
  z-index: 9999 !important;
}
.mat-tab-body-content{
  overflow: hidden !important;
}
.mat-dialog-container{
  padding-top: 0px !important;
}

.switch-toggle label:not(.disabled) {
  cursor: pointer;
}
.switch-toggle input + label{
  font-size: 12px;
}
.custom-salarymodalbox {
  max-width: 480px;
}
.chartcustom{
  background-color: #fff !important; 
}
.chartcustom .card-header{
  background-color: #fff !important; 
  border-bottom: none !important;;
} 
.chartcustom .card-body{
  padding-top: 10px !important;
  padding-left: 0px !important;
  padding-right: 0px !important;
}
.chartbodycustom {
  padding-top: 10px !important;
  padding-left: 0px !important;
  padding-right: 0px !important;
}
.bg-gradient-primary {
  background: #1f1498!important;
  background: linear-gradient(45deg,#321fdb 0%,#1f1498 100%)!important;
  border-color: #1f1498!important;
  color:#fff;
}

.bg-gradient-info {
  background: #2982cc!important;
  background: linear-gradient(45deg,#39f 0%,#2982cc 100%)!important;
  border-color: #2982cc!important;
  color:#fff;
}

.bg-gradient-warning {
  background: #f6960b!important;
  background: linear-gradient(45deg,#f9b115 0%,#f6960b 100%)!important;
  border-color: #f6960b!important;
  color:#fff;
}
.bg-gradient-success {
  background: #75db1b!important;
  background: linear-gradient(45deg,#85db1b 0%,#75db1b 100%)!important;
  border-color: #75db1b!important;
  color:#fff;
}
.bg-gradient-danger {
  background: #d93737!important;
  background: linear-gradient(45deg,#e55353 0%,#d93737 100%)!important;
  border-color: #d93737!important;
  color:#fff;
}



.marqueecontainer {
  height: 235px;
  overflow: hidden;
  background: white;
  position: relative;
  box-sizing: border-box;
}

.marquee {
  top: 6em;
  position: relative;
  box-sizing: border-box;
  animation: marquee 15s linear infinite;
}

.marquee:hover {
  animation-play-state: paused;
}

/* Make it move! */
@keyframes marquee {
  0%   { top:   8em }
  100% { top: -11em }
}

/* Make it look pretty */
.marqueecontainer .marquee {
margin: 0;
  padding: 0 1em;
  line-height: 1.5em;
  font: 1em 'Segoe UI', Tahoma, Helvetica, Sans-Serif;
}

.marqueecontainer:before, .marqueecontainer::before,
.marqueecontainer:after,  .marqueecontainer::after {
  left: 0;
  z-index: 1;
  content: '';
  position: absolute;
  pointer-events: none;
  width: 100%; height: 2em;
}

.marqueecontainer:after, .marqueecontainer::after {
  bottom: 0;
  transform: rotate(180deg);
}

.marqueecontainer:before, .marqueecontainer::before {
  top: 0;
}
